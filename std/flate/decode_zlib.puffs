// Copyright 2017 The Puffs Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

pub error "invalid zlib compression method"
pub error "invalid zlib compression window size"
pub error "invalid zlib parity check"

pub error "TODO: unsupported zlib preset dictionary"

pub struct zlib_decoder?(
	dec decoder,
	adler adler,
)

pub func zlib_decoder.decode?(dst writer1, src reader1)() {
	var x u16 = in.src.read_u16be?()
	if ((x >> 8) & 0x0F) != 0x08 {
		return error "invalid zlib compression method"
	}
	if (x >> 12) > 0x07 {
		return error "invalid zlib compression window size"
	}
	if (x & 0x20) != 0 {
		return error "TODO: unsupported zlib preset dictionary"
	}
	if (x % 31) != 0 {
		return error "invalid zlib parity check"
	}
	this.dec.decode?(dst:in.dst, src:in.src)
	var checksum u32 = in.src.read_u32be?()
	// TODO: verify the checksum.
}

// TODO: drop the '?' but still generate puffs_flate_adler_initialize?
pri struct adler?(
	state u32 = 1,
)

pri func adler.update(x[] u8)(checksum u32) {
	return this.state
}
